"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[442],{4852:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(9231);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=p;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},445:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var r=n(5339),o=n(7318),i=(n(9231),n(4852)),l=["components"],a={sidebar_position:1e3},u="Custom Field",s={unversionedId:"Fields/CustomField",id:"Fields/CustomField",title:"Custom Field",description:"You can create custom field",source:"@site/docs/Fields/CustomField.md",sourceDirName:"Fields",slug:"/Fields/CustomField",permalink:"/visual-editor/docs/Fields/CustomField",editUrl:"https://github.com/boxraiser/visual-editor/tree/main/docs/docs/Fields/CustomField.md",tags:[],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3},sidebar:"tutorialSidebar",previous:{title:"TextAlign",permalink:"/visual-editor/docs/Fields/TextAlign"},next:{title:"Row",permalink:"/visual-editor/docs/Fields/Layout/Row"}},c=[],d={toc:c};function p(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"custom-field"},"Custom Field"),(0,i.kt)("p",null,"You can create custom field "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { AbstractField } from '@boxraiser/visual-editor'\n\n/**\n * @property args Field arguments merged with default \n */\nexport class MyCustomField extends AbstractField {\n\n  // Set the default arguments for this field\n  get defaultArgs() {\n    return {\n      multiline: true,\n      allowHeadings: false,\n      default: '', // Set the default value for this field\n    }\n  }\n\n  /**\n   * Function used to render the field\n   * @param {T} value The value set by the user\n   * @param {(T) => void} onChange A callback to call when the value change (expect the value as a parameter)\n   * @returns {JSX.Element}\n   */\n  field({ value, onChange }) {\n    return (\n      <Field label={this.args.label} help={this.args.help}>\n        <div className={Styles.HTMLText}>\n          <QuillEditor\n            value={value || ''}\n            onChange={onChange}\n            mode={this.fieldType()}\n            colors={this.args.colors}\n          />\n        </div>\n      </Field>\n    )\n  }\n}\n")),(0,i.kt)("p",null,"Then, you can use your field when creating new blocks"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"// The arguments will be merged with the default arguments\nnew MyCustomField('title', {\n  label: 'Title',\n  default: 'Pro',\n  multiline: false,\n})\n")))}p.isMDXComponent=!0}}]);